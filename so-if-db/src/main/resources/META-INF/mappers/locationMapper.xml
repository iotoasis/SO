<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pineone.icbms.so.interfaces.database.dao.LocationDao">
    <select id="retrieveLocationById" parameterType="String" resultType="LocationForDB">
        SELECT
        id
        , created_date
        , description
        , modified_date
        , name
        , uri
        , order_cd
        FROM location
        WHERE
          id = #{value}
    </select>

    <select id="retrieveLocationByModel" parameterType="LocationForDB" resultType="LocationForDB">
        SELECT
        id
        , created_date
        , description
        , modified_date
        , name
        , uri
        , order_cd
        , order_idx
        FROM location
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="uri != null">
                AND uri = #{uri}
            </if>
            <if test="description != null">
                AND description = #{description}
            </if>
            <if test="orderCd != null">
                AND order_cd = #{orderCd}
            </if>
        </trim>
        ORDER BY order_idx, order_cd
    </select>

    <insert id="createLocation"  parameterType="LocationForDB">
        INSERT INTO location (
        id
        , name
        , uri
        , description
        , created_date
        , modified_date
        , order_cd
        )
        VALUES (
        #{id}
        , #{name}
        , #{uri}
        , #{description}
        , now(4)
        , now(4)
        , #{orderCd}
        )
    </insert>

    <update id="updateLocation" parameterType="LocationForDB">
        UPDATE location
        <set>
            modified_date = now(4)
            <if test="uri != null">, uri = #{uri}</if>
            <if test="name != null">, name = #{name}</if>
            <if test="description != null">, description = #{description}</if>
            <if test="orderCd != null">, order_cd = #{orderCd}</if>
        </set>
        WHERE
        id = #{id}
    </update>

    <delete id="deleteLocation" parameterType="String">
        delete from location
        where id = #{value}
    </delete>
</mapper>