<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pineone.icbms.so.interfaces.database.dao.ProfileDao">
  <select id="retrieveServiceByProfile" parameterType="String" resultType="ProfileForDB">
    SELECT
      *
    FROM
      profile
    WHERE
      id = #{value}
  </select>

  <select id="retrieveProfileByContextModel" parameterType="String" resultType="ProfileForDB">
    SELECT * FROM profile
	<if test="_parameter != null">      
    WHERE
      context_model_id =  #{_parameter}
    ORDER BY order_idx, order_cd
    </if>
  </select>

  <select id="retrieveProfileByLocation" parameterType="String" resultType="ProfileForDB">
    SELECT * FROM profile p
	<if test="_parameter != null">
	JOIN location l ON p.location_id=l.id
	      
    WHERE
      l.id =  #{_parameter}
    ORDER BY p.order_idx, p.order_cd
    </if>
  </select>

  <select id="getProfileByContextModelAndLocation" parameterType="HashMap" resultType="ProfileForDB">
    SELECT
		*
    FROM
      profile
    WHERE
      context_model_id = #{contextModelId}
      AND location_id = #{locationUri}
  </select>

  <select id="getProfileByContextModelAndLocationUri" parameterType="HashMap" resultType="ProfileForDB">
    SELECT
		p.*,
		l.uri locationUri
    FROM
      profile p
    LEFT JOIN location l ON p.location_id = l.id  
    WHERE
      p.context_model_id = #{contextModelId}
     <if test="locationUri != null">
      	AND l.uri = #{locationUri}
     </if>
  </select>

  <select id="retrieveProfileListByEnable" parameterType="Integer" resultType="ProfileForDB">
    SELECT
		*
    FROM
      profile
    WHERE
      enabled = #{value}
    ORDER BY order_idx, order_cd
  </select>

  <select id="retrieveProfile" parameterType="String" resultType="ProfileForDB">
    SELECT *
    FROM profile
    WHERE id = #{value}
  </select>

  <select id="retrieveProfileByModel" resultType="ProfileForDB">
    SELECT *
    FROM profile
    <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="name != null">
        AND name = #{name}
      </if>
      <if test="description != null">
        AND description = #{description}
      </if>
      <if test="contextModelId != null">
        AND context_model_id = #{contextModelId}
      </if>
      <if test="locationId != null">
        AND location_id = #{locationId}
      </if>
      <if test="orchestrationServiceId != null">
        AND orchestration_service_id = #{orchestrationServiceId}
      </if>
      <if test="period != null">
        AND period = #{period}
      </if>
    </trim>
    ORDER BY order_idx, order_cd
  </select>

  <insert id="createProfile" parameterType="ProfileForDB">
    INSERT INTO profile (
		id
	  , name
	  , description
	  , context_model_id
	  , orchestration_service_id
	  , location_id
	  , enabled
	  , period
	  , priority
	  , created_date
	  , modified_date
    )
    VALUES (
        #{id}
      , #{name}
      , #{description}
      , #{contextModelId}
      , #{orchestrationServiceId}
      , #{locationId}
      , #{enabled}
      , #{period}
      , #{priority}
      , now(4)
      , now(4)
    )
  </insert>

  <update id="updateProfile" parameterType="ProfileForDB">
    UPDATE profile SET
      modified_date = now(4)
      <if test="name != null">, name = #{name}</if>
      <if test="description != null">, description = #{description}</if>
      <if test="enabled != null">, enabled = #{enabled}</if>
      <if test="contextModelId != null">, context_model_id = #{contextModelId}</if>
      <if test="locationId != null">, location_id = #{locationId}</if>
      <if test="orchestrationServiceId != null">, orchestration_service_id = #{orchestrationServiceId}</if>
      <if test="period != null">, period = #{period}</if>
      <if test="priority != null">, priority = #{priority}</if>
    WHERE
      id = #{id}
  </update>

  <update id="updateProfilePeriod" parameterType="ProfileForDB">
    UPDATE profile SET
    	modified_date = now(4)
      , period = #{period}
    WHERE
    	id = #{id}
  </update>

  <update id="updateProfileEnabled" parameterType="ProfileForDB">
    UPDATE profile SET
    	modified_date = now(4)
      , enabled = #{enabled}
    WHERE
    	id = #{id}
  </update>

  <update id="updateProfileEnabledAll" parameterType="ProfileForDB">
    UPDATE profile SET
      	modified_date = now(4)
      , enabled = #{enabled}
  </update>

  <delete id="deleteProfile" parameterType="ProfileForDB">
    delete from profile where id = #{id}
  </delete>

</mapper>