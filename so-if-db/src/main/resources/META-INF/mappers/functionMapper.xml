<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pineone.icbms.so.interfaces.database.dao.FunctionDao">
    <select id="retrieveFunctionById" parameterType="String" resultType="FunctionForDB">
        SELECT
            id
            , created_date
            , description
            , modified_date
            , name
            , uri
        FROM function
        WHERE
                id = #{value}
    </select>

    <select id="retrieveFunctionByModel" parameterType="FunctionForDB" resultType="FunctionForDB">
        SELECT
            id
            , created_date
            , description
            , modified_date
            , name
            , uri
        FROM function
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="uri != null">
                AND uri = #{uri}
            </if>
            <if test="description != null">
                AND description = #{description}
            </if>
        </trim>
    </select>

    <insert id="createFunction"  parameterType="FunctionForDB">
        INSERT INTO function (
            id
            , name
            , uri
            , description
            , created_date
            , modified_date
        )
        VALUES (
            #{id}
            , #{name}
            , #{uri}
            , #{description}
            , now(4)
            , now(4)
        )
    </insert>

    <update id="updateFunction" parameterType="FunctionForDB">
        UPDATE function
        <set>
            modified_date = now(4)
            <if test="uri != null">, uri = #{uri}</if>
            <if test="name != null">, name = #{name}</if>
            <if test="description != null">, description = #{description}</if>
        </set>
        WHERE
          id = #{id}
    </update>

    <delete id="deleteFunction" parameterType="String">
        delete from function
        where id = #{value}
    </delete>
</mapper>